name: Test PlayerController API tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Run tests
      run: mvn clean test
      
    - name: Upload Allure Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: target/allure-results
        if-no-files-found: warn
        
    - name: Generate Allure Report
      if: always()
      run: |
        if [ -d "target/allure-results" ] && [ "$(ls -A target/allure-results)" ]; then
          mvn allure:report -Dallure.results.directory=target/allure-results
          if [ -d "target/site/allure-maven-plugin" ] && [ ! -d "target/allure-report" ]; then
            mv target/site/allure-maven-plugin target/allure-report
          fi
        fi
        
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: target/allure-report
        if-no-files-found: ignore
        
    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: target/logs
        if-no-files-found: warn
        
    - name: Check Allure Report
      if: always()
      id: check-report
      run: |
        if [ -d "target/allure-report" ] && [ -f "target/allure-report/index.html" ]; then
          echo "report_exists=true" >> $GITHUB_OUTPUT
        else
          echo "report_exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Deploy Allure Report to GitHub Pages
      if: always() && steps.check-report.outputs.report_exists == 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: target/allure-report
        destination_dir: ${{ github.run_number }}
        keep_files: true
        
    - name: Add Allure Report Link to Summary
      if: always() && steps.check-report.outputs.report_exists == 'true'
      run: |
        REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.run_number }}/index.html"
        echo "### ðŸ“Š Allure Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[View Allure Report]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Report URL: \`$REPORT_URL\`" >> $GITHUB_STEP_SUMMARY
